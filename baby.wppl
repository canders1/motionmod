var speaker = 'Sarah';
var addressee = 'Jane'

var worldPrior = function() {
	return uniformDraw([
	{locSarah: 'Amherst', locJane: 'Amherst'},
	{locSarah: 'Amherst', locJane: 'Noho'},
	{locSarah: 'Noho', locJane: 'Noho'},
	{locSarah: 'Noho', locJane: 'Amherst'}])
}

var perspectivePrior = function() {
	return uniformDraw([
	{value: 'Sarah'},
	{value: 'Jane'}])
}

var utterances = [
'Jane is in Amherst',
'Jane is in Noho',
'Sarah is in Amherst',
'Sarah is in Noho',
'I am in Amherst',
'I am in Noho',
'You are in Amherst',
'You are in Noho',
'Perspective in Amherst',
'Perspective in Noho',]

var meaning = function(utterance, world, perspective){
  return utterance == 'Jane is in Amherst' ? world.locJane == 'Amherst' :
  utterance == 'Jane is in Noho' ? world.locJane == 'Noho' :
  utterance == 'Sarah is in Amherst' ? world.locSarah == 'Amherst' :
  utterance == 'Sarah is in Noho' ? world.locSarah == 'Noho' :
  utterance == 'You are in Noho'? ((addressee === 'Sarah' && world.locSarah == 'Noho') || (addressee === 'Jane' && world.locJane == 'Noho')) :
  utterance == 'You are in Amherst'? ((addressee === 'Sarah' && world.locSarah == 'Amherst') || (addressee === 'Jane' && world.locJane == 'Amherst')) :
  utterance == 'I am in Noho'? ((speaker === 'Sarah'&& world.locSarah == 'Noho') || (speaker === 'Jane' && world.locJane == 'Noho')) :
  utterance == 'I am in Amherst'? ((speaker === 'Sarah'&& world.locSarah == 'Amherst') || (speaker === 'Jane' && world.locJane == 'Amherst')):
  utterance == 'Perspective in Noho'? ((perspective.value === 'Sarah'&& world.locSarah == 'Noho') || (perspective.value === 'Jane' && world.locJane == 'Noho')) :
  utterance == 'Perspective in Amherst'? ((perspective.value === 'Sarah'&& world.locSarah == 'Amherst') || (perspective.value === 'Jane' && world.locJane == 'Amherst'))
  : true
}

var literalListener = function(utterance,perspective){
  Infer({method:'enumerate'}, function(){
    var world = worldPrior();
    var uttTruthVal = meaning(utterance, world, perspective);
    condition(uttTruthVal == true)
    return world
  })
}

var literalSpeaker = function(world,perspective){
	Infer({method:'enumerate'}, function(){
	var utterance = uniformDraw(utterances);
	factor(literalListener(utterance,perspective).score(world));
	return utterance
	})
}

var pragmaticListener = function(utterance){
	Infer({method:"enumerate"}, function(){
	var world = worldPrior();
	var perspective = perspectivePrior();
	observe(literalSpeaker(world,perspective),utterance,perspective);
	return [world,perspective]
	})
}

//literalListener('I am in Amherst',{value: 'Sarah'})
//literalSpeaker({locSarah: 'Amherst', locJane: 'Amherst'},{value: 'Sarah'})
pragmaticListener('Perspective in Amherst')
